version: '3.8'

services:
  redis:
    image: redis
    volumes:
      - ./data:/data

  comandos_factura:
    volumes:
      - ./comandos_factura/:/app/
    build: ./comandos_factura
    command:
      - sh
      - -c
      - |
        alembic upgrade head
        flask run --host=0.0.0.0
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy

  verificador:
    volumes:
      - ./verificador/:/app/
    build: ./verificador
    command:
      - sh
      - -c
      - |
        python listener.py
    depends_on:
      comandos_factura:
        condition: service_started
      redis:
        condition: service_started
    environment:
      - PYTHONUNBUFFERED=1
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  db:
    container_name: db
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 2s
      retries: 5

  log_integridad:
    volumes:
      - ./logs/:/logs
    build: ./log_integridad
    command: celery -A tasks worker --loglevel=info -Q integrity_log
    depends_on:
      - redis
